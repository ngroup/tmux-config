# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1

# set display color
set -g default-terminal "screen-256color"
# enable terminal compability
set-option -ga terminal-overrides ",*256col*:Tc"

# hey tmux! use the system clipboard.
# this will work if you're using mvim from within the terminal
# set-option -g default-command "reattach-to-user-namespace -l bash"

# so you don't end up with window numbers like: 0 1 4 5 6
set-option -g renumber-windows on


# mouse behavior
set -g mouse on
# Mouse support
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on
# setw -g mode-mouse copy-mode

# Use vi keys
set -gw mode-keys vi

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout


# set status bar
set-option -g status-position top

# default window title colors
set-window-option -g window-status-fg colour16
set-window-option -g window-status-bg default

# active window title colors
set-window-option -g window-status-current-fg colour16
set-window-option -g window-status-current-bg colour122
#set-window-option -g window-status-current-attr bright

set -g status-bg colour242
set -g status-fg white


# quick esc response
set -sg escape-time 0

# prefix r: reload tmux config
# bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'

# make new panes and windows use the pwd
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"


# vim keymapping
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# use `<prefix> [` to enter copy-mode
bind-key [ copy-mode
unbind-key C-[

# Vim style
# use 'v' to begin selection in copy mode, similar entering visual mode in Vim
bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "xsel -i -p && xsel -o -p | xsel -i -b"
